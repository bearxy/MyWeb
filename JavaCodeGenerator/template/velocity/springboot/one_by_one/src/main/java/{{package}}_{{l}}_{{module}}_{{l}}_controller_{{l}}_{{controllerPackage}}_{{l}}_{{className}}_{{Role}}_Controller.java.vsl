package ${config.package}.${config.module}.controller.${config.controllerPackage};

import java.io.Serializable;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.misterfat.pagination.PaginationInterface;
import com.misterfat.result.Result;
import ${config.package}.${config.module}.dto.${tableModel.className}Dto;
import ${config.package}.${config.module}.entity.${tableModel.className};
import ${config.package}.${config.module}.qo.${tableModel.className}Qo;
import ${config.package}.${config.module}.service.${tableModel.className}Service;

/**
 * 
 * ${tableModel.comment}信息控制器（${generateConfig.Role}）
 *
 * @author ${config.author}
 *
 * @version
 *
 * @since ${config.date}
 */
@Controller
public class ${tableModel.className}${generateConfig.Role}Controller {

	@Autowired
	private ${tableModel.className}Service ${tableModel.objectName}Service;

	/**
	 * 
	 * 功能描述：列表
	 * 
	 * @return
	 * 
	 * @author ${config.author}
	 * 
	 * @since 2016年04月26日
	 * 
	 * @update:[变更日期YYYY-MM-DD][更改人姓名][变更描述]
	 */
	@RequestMapping("${generateConfig.role}/${generateConfig.url}/pagelist")
	@ResponseBody
	public PaginationInterface pagelist(@RequestBody ${tableModel.className}Qo qo) {
		return ${tableModel.objectName}Service.findPaginationDataByCondition(qo);
	}

	/**
	 * 
	 * 功能描述：详情
	 *
	 * @param id
	 * @return
	 * 
	 * @author ${config.author}
	 *
	 * @since ${config.date}
	 *
	 * @update:[变更日期YYYY-MM-DD][更改人姓名][变更描述]
	 */
	@RequestMapping("${generateConfig.role}/${generateConfig.url}/detail")
	@ResponseBody
	public Result detail(@RequestParam String id) {

		return Result.valueOf(Result.SUCCESS, ${tableModel.objectName}Service.findById(id));
	}

	/**
	 * 
	 * 功能描述：批量删除
	 *
	 * @param id
	 * @return
	 * 
	 * @author ${config.author}
	 *
	 * @since ${config.date}
	 *
	 * @update:[变更日期YYYY-MM-DD][更改人姓名][变更描述]
	 */
	@RequestMapping("${generateConfig.role}/${generateConfig.url}/batch_delete")
	@ResponseBody
	public Result batchDelete(@RequestParam Serializable... ids) {

		${tableModel.objectName}Service.batchDelete(ids);

		return Result.valueOf(Result.SUCCESS, "操作成功");
	}

	/**
	 * 
	 * 功能描述：删除
	 *
	 * @param id
	 * @return
	 * 
	 * @author ${config.author}
	 *
	 * @since ${config.date}
	 *
	 * @update:[变更日期YYYY-MM-DD][更改人姓名][变更描述]
	 */
	@RequestMapping("${generateConfig.role}/${generateConfig.url}/delete")
	@ResponseBody
	public Result delete(@RequestParam String id) {

		${tableModel.objectName}Service.deleteByID(id);

		return Result.valueOf(Result.SUCCESS, "操作成功");
	}

	/**
	 * 
	 * 功能描述：添加
	 *
	 * @param id
	 * @return
	 * 
	 * @author ${config.author}
	 *
	 * @since ${config.date}
	 *
	 * @update:[变更日期YYYY-MM-DD][更改人姓名][变更描述]
	 */
	@RequestMapping("${generateConfig.role}/${generateConfig.url}/add")
	@ResponseBody
	public Result add(@RequestBody ${tableModel.className}Dto dto) {

		${tableModel.className} ${tableModel.objectName} = new ${tableModel.className}();
		BeanUtils.copyProperties(dto, ${tableModel.objectName});
		${tableModel.objectName}Service.insert(${tableModel.objectName});

		return Result.valueOf(Result.SUCCESS, "操作成功");
	}

	/**
	 * 
	 * 功能描述：修改
	 *
	 * @param id
	 * @return
	 * 
	 * @author ${config.author}
	 *
	 * @since ${config.date}
	 *
	 * @update:[变更日期YYYY-MM-DD][更改人姓名][变更描述]
	 */
	@RequestMapping("${generateConfig.role}/${generateConfig.url}/edit")
	@ResponseBody
	public Result edit(@RequestBody ${tableModel.className}Dto dto) {

		${tableModel.className} ${tableModel.objectName} = new ${tableModel.className}();
		BeanUtils.copyProperties(dto, ${tableModel.objectName});
		${tableModel.objectName}Service.updateSelective(${tableModel.objectName});

		return Result.valueOf(Result.SUCCESS, "操作成功");
	}

}
