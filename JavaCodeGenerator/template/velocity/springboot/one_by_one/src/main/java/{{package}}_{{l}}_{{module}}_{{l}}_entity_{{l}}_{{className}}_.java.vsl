##实体对象类的生成模板
package ${config.package}.${config.module}.entity;

#if(${tableModel.hasBigDecimal} == '1')
import java.math.BigDecimal;
#end

#if(${tableModel.hasDate} == '1')
import com.fasterxml.jackson.annotation.JsonFormat;
import org.springframework.format.annotation.DateTimeFormat;
import com.misterfat.springboot.starter.core.util.DateUtil;

import java.util.Date;
#end


/**
 * 
 * 说明：${tableModel.comment} 值对象类
 * 
 * @author ${config.author}
 * 
 * @version ${config.version}
 * 
 * @since ${config.date}
 */
public class ${tableModel.className}  {


#foreach ( $property in ${tableModel.fieldList})

 		#if($property.jdbcType == "TIMESTAMP" )
    
    		@DateTimeFormat(pattern = DateUtil.DEFAULT_DATETIME_FORMAT)
    	#end
		#if($property.jdbcType == "DATE")
		
			@DateTimeFormat(pattern = DateUtil.DEFAULT_DATE_FORMAT)
		#end
		#if($property.jdbcType == "TIME" )
		
			@DateTimeFormat(pattern = DateUtil.DEFAULT_TIME_FORMAT)
        #end 
	private ${property.javaType} ${property.propertyName}; // ${property.comment}

#end



/** 以下为get,set方法 */
#foreach ( $property in ${tableModel.fieldList})
    
   		 #if($property.jdbcType == "TIMESTAMP" )
    
    		@JsonFormat(pattern = DateUtil.DEFAULT_DATETIME_FORMAT, timezone = DateUtil.DEFAULT_TIMEZONE_ID)
    	#end
		#if($property.jdbcType == "DATE")
		
			@JsonFormat(pattern = DateUtil.DEFAULT_DATE_FORMAT, timezone = DateUtil.DEFAULT_TIMEZONE_ID)
		#end
		#if($property.jdbcType == "TIME" )
		
			@JsonFormat(pattern = DateUtil.DEFAULT_TIME_FORMAT, timezone = DateUtil.DEFAULT_TIMEZONE_ID)
        #end 
		
        	
        	 public ${property.javaType} get${property.firstUpperPropertyName}() {
		        return this.${property.propertyName};
	        }
	        public void set${property.firstUpperPropertyName}( ${property.javaType} ${property.propertyName} ) {
	        	this.${property.propertyName} = ${property.propertyName};
	        }
	

#end


	@Override
	public String toString() {
		return ${mybatisConfig.toString};
	}

}
